/* Design a cash register drawer function checkCashRegister() that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

cid is a 2D array listing available currency.

The checkCashRegister() function should always return an object with a status key and a change key.

Return {status: "INSUFFICIENT_FUNDS", change: []} if cash-in-drawer is less than the change due, or if you cannot return the exact change.

Return {status: "CLOSED", change: [...]} with cash-in-drawer as the value for the key change if it is equal to the change due.

Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the change key.  */


function checkCashRegister(price, cash, cid) {
  let changeNeed = cash-price;
  let changeNeedCopy = changeNeed;
  let cashSum= 0;
  let resArr = [];
  let nominals = [['PENNY', 0.01], ['NICKEL', 0.05], ['DIME', 0.1], ['QUARTER', 0.25], ['ONE', 1], ['FIVE', 5], ['TEN', 10], ['TWENTY', 20], ['ONE HUNDRED', 100]];
  
  for(let i=0; i<cid.length; i++){
    cashSum+=cid[i][1];
  }
 cashSum = cashSum.toFixed(2);


  if(cashSum==changeNeed){
    return{
      'status': 'CLOSED',
      'change': cid
    }
  }

let buf=0;
  for(let i=cid.length-1; i>=0; i--){
       while(cid[i][1]>0 && changeNeed-nominals[i][1]>=0){
           buf+=nominals[i][1];
           cid[i][1] -= nominals[i][1];
           changeNeed -=  nominals[i][1];
           changeNeed = changeNeed.toFixed(2);
       }
       if(buf>0){
         resArr.push([nominals[i][0], buf]);
         buf=0;
       }
  }


 if(cashSum<changeNeedCopy || changeNeed>0){
    return {
      'status': 'INSUFFICIENT_FUNDS',
      'change': []
    };
  }else{
  return {
    'status': 'OPEN',
    'change': resArr
  };
  };
}

// Example cash-in-drawer array:
// [["PENNY", 1.01],
// ["NICKEL", 2.05],
// ["DIME", 3.1],
// ["QUARTER", 4.25],
// ["ONE", 90],
// ["FIVE", 55],
// ["TEN", 20],
// ["TWENTY", 60],
// ["ONE HUNDRED", 100]]

checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]);
